@model TestTask.ViewModels.UserCreateEditViewModel

<div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => Model.Id, new { @id = "idHolder" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "nameEditor" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "emailEditor" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SkypeLogin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SkypeLogin, new { htmlAttributes = new { @class = "form-control", @id = "skypeEditor" } })
            @Html.ValidationMessageFor(model => model.SkypeLogin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Note, new { @class = "form-control", @id = "noteEditor" })
            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="file" class="btn btn-default" id="avatarLoader" />
        </div>
    </div>
</div>
<div>
    <div class="form-group">
        @if (Model.FilePath != "")
        {
            <div class="result">
                <img src="~/UploadedImages/@Model.FilePath" alt="image" id="avatar" />

            </div>
        }
    </div>
</div>

@Scripts.Render("~/bundles/autoloaddata")